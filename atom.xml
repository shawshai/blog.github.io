<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>少帥的博客</title>
  
  <subtitle>Shaw Shai&#39;s Blog</subtitle>
  <link href="http://shawshai.cn/atom.xml" rel="self"/>
  
  <link href="http://shawshai.cn/"/>
  <updated>2021-04-26T15:52:43.757Z</updated>
  <id>http://shawshai.cn/</id>
  
  <author>
    <name>少帥</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客搭建过程</title>
    <link href="http://shawshai.cn/2021/04/24/hexo-github-study/"/>
    <id>http://shawshai.cn/2021/04/24/hexo-github-study/</id>
    <published>2021-04-24T13:38:19.000Z</published>
    <updated>2021-04-26T15:52:43.757Z</updated>
    
    <content type="html"><![CDATA[<p>记录博客网站的搭建过程。</p><span id="more"></span><h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><p>本博客网站的搭建，主要由以下三部分构成：</p><ul><li>Hexo静态博客框架；</li><li>GitHub托管静态网页；</li><li>阿里云域名购买。</li></ul><p>主要参考了知乎大佬的这篇教程：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GitHub+Hexo 搭建个人网站详细教程</span><br><span class="line">https:<span class="regexp">//</span>zhuanlan.zhihu.com<span class="regexp">/p/</span><span class="number">26625249</span></span><br></pre></td></tr></table></figure><p>搭建过程完全按照教程进行。其中须注意的几点：</p><ol><li><p>GitHub创建新仓库托管静态网页，仓库类型必须为public；</p></li><li><p><code>hexo init blog</code>命令后，会新建一个blog文件夹，后面的命令均在新建的blog文件夹下执行；</p></li><li><p>域名解析和教程中稍有差异；</p><div style="width:50%;margin:auto"><img src="/2021/04/24/hexo-github-study/dns.jpg" class="" title="域名解析"></div></li><li><p>更换主题时要先将主题下载到themes文件夹中，next主题地址有更新；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li></ol><p>关于主题的个性化设置暂时还没有做。</p><h1 id="异地管理"><a href="#异地管理" class="headerlink" title="异地管理"></a>异地管理</h1><p>接下来将遇到异地管理问题（比如换了一台电脑）。注意到，在以上过程中托管到GitHub的文件，仅为所发布的网页文件，并非本地的编辑与配置源文件。因此还需要建立仓库来管理源文件。</p><p>于是找到这篇教程：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hexo+github个人博客搭建+异地管理</span><br><span class="line">https:<span class="regexp">//</span>blog.csdn.net<span class="regexp">/zwx2445205419/</span>article<span class="regexp">/details/</span><span class="number">66970640</span></span><br></pre></td></tr></table></figure><p>其做法是在原仓库新建hexo分支，用于提交源文件。</p><p>考虑到原仓库为public，而我希望源文件为private，因此须建立private仓库。大致步骤如下:</p><ol><li><p>新建仓库名为hexo，设为private；（此处我擅自将分支也改名为hexo）</p></li><li><p>在blog文件夹外，将库hexo克隆到本地；（注意public和private库的克隆方式有所区别）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将https:// 改为 git@github.com:用户名/项目名称</span></span><br><span class="line">git <span class="built_in">clone</span> git@github.com:shawshai/hexo.git</span><br></pre></td></tr></table></figure></li><li><p>将文件夹blog中所有文件复制到文件夹hexo中，并删除文件<code>.gitignore</code>；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line"><span class="comment"># 添加所有变化，工作区-&gt;暂存区</span></span><br><span class="line">git add -A</span><br><span class="line"><span class="comment"># 暂存区-&gt;版本库</span></span><br><span class="line">git commit -m <span class="string">&quot;add all hexo files&quot;</span></span><br><span class="line"><span class="comment"># 本地库-&gt;远程库</span></span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure></li><li><p>此处发现主题文件夹next由于是从GitHub克隆，自动作为子模块，无法正常push到远程仓库hexo，须增加以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除Git文件</span></span><br><span class="line">rm -r themes/next/.git*</span><br><span class="line"><span class="comment"># 逆初始化模块</span></span><br><span class="line">git submodule deinit themes/next</span><br><span class="line"><span class="comment"># 删除.gitmodules中记录的模块信息（--cached选项清除.git/modules中的缓存）</span></span><br><span class="line">git rm --cached themes/next </span><br><span class="line"><span class="comment"># 提交更改到代码库</span></span><br><span class="line">git commit -am <span class="string">&quot;Remove next submodule.&quot;</span> </span><br></pre></td></tr></table></figure><p>再重复步骤3，Done！</p></li></ol><p>更换电脑后，只要克隆hexo到本地，安装好<code>Node.js</code>和<code>Hexo</code>，在文件夹hexo中继续编辑即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载安装Node.js----[https://nodejs.org/en/download/]</span></span><br><span class="line"><span class="comment"># 检测是否安装成功</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line"><span class="comment"># 安装Hexo</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="comment"># 安装Git部署插件</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>注意，不需要<code>hexo init</code>，该操作会重置文件<code>_config.yml</code>中的参数。编辑结束后，依旧在当前目录hexo中，<code>hexo</code>部署，<code>git</code>上传即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment"># 清除缓存</span></span><br><span class="line">hexo g     <span class="comment"># 生成</span></span><br><span class="line">hexo s     <span class="comment"># 启动服务预览</span></span><br><span class="line">hexo d     <span class="comment"># 部署</span></span><br></pre></td></tr></table></figure><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>后续将继续记录使用过程中遇到的问题，以及解决办法。</p><h2 id="插入图片问题"><a href="#插入图片问题" class="headerlink" title="插入图片问题"></a>插入图片问题</h2><p>插入图片是基本需求。</p><p>参考了<a href="https://zhuanlan.zhihu.com/p/265077468">链接</a>，在文件夹hexo中的文件<code>_config.yml</code>中更改设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>安装插件<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-marked</span><br></pre></td></tr></table></figure><p>目前有两种方式插入本地图片：</p><ol><li><p>使用markdown语法</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="selector-attr">[图片信息描述]</span>(abc.jpg)</span><br></pre></td></tr></table></figure><p>此方法无法控制图片大小，默认占满父容器宽度。Typora中一旦设置图片缩放，便转化成了html语法，部署后图片路径出错，无法显示。</p></li><li><p>使用html语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:50%;margin:auto&quot;</span>&gt;</span>&#123;% asset_img abc.png 图片信息描述 %&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此方法在Typora中无法像显示图像，但能够实现调整网页中图像大小。</p><p>参考了以下链接：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Hexo</span> 自定义图片大小</span><br><span class="line"><span class="attribute">https</span>://www.dazhuanlan.com/<span class="number">2019</span>/<span class="number">10</span>/<span class="number">07</span>/<span class="number">5</span>d<span class="number">9</span>a<span class="number">759</span>c<span class="number">66188</span>/</span><br></pre></td></tr></table></figure></li></ol><p>还是希望能够调整图片大小，因此目前采用了第二种方法。</p><h2 id="异地克隆问题"><a href="#异地克隆问题" class="headerlink" title="异地克隆问题"></a>异地克隆问题</h2><p>更换电脑时，将私有库hexo克隆到本地时，本地测试运行重启后页面空白，提示 : </p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WARN No <span class="keyword">layout</span>: <span class="keyword">index</span>.html</span><br></pre></td></tr></table></figure><p>检查发现远程私有库hexo中主题文件夹themes\next是空的，没有push上去。</p><p>重新克隆主题next即可。完整过程如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:shawshai/hexo.git</span><br><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><hr><p>很快发现，上述方案并没有解决问题，因为新克隆的主题next参数配置全部为初始值。</p><p>主题文件next无法<code>push</code>的原因：该主题是从Github克隆的，自动作为hexo的子模块。</p><p>正确解决方案如下：</p><p>先删除其Git文件，然后删除其子模块身份。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除Git文件</span></span><br><span class="line">rm -r themes/next/.git*</span><br><span class="line"><span class="comment"># 逆初始化模块</span></span><br><span class="line">git submodule deinit themes/next</span><br><span class="line"><span class="comment"># 删除.gitmodules中记录的模块信息（--cached选项清除.git/modules中的缓存）</span></span><br><span class="line">git rm --cached themes/next </span><br><span class="line"><span class="comment"># 提交更改到代码库</span></span><br><span class="line">git commit -am <span class="string">&quot;Remove a submodule.&quot;</span> </span><br></pre></td></tr></table></figure><p>如此，主题文件next便能正常push，后续将不会遭遇此问题。（已补充到第2节异地管理第4步中）</p><p>Done.</p><h2 id="还是Git问题"><a href="#还是Git问题" class="headerlink" title="还是Git问题"></a>还是Git问题</h2><p>由于时常需要在笔记本和台式机之间切换，在使用Git时遇到一点问题。</p><p>目前的策略是，在一端编辑完成，最后一次<code>hexo d</code>之后，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add -A</span><br><span class="line">git commit -m <span class="string">&quot;修改说明&quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>然后在另一端，开始编辑前，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><p>每次编辑始于<code>git pull</code>，终于<code>git push</code>，仓库hexo中只设一个分支，最大程度避免在Git中遇到复杂情况。</p><p>然而，这个流程存在问题：有时执行<code>git pull</code>后发现拉取的文件不全，远程库中某些文件没有更新到本地。</p><p>这是由于本地内容有更改，所以没有<code>pull</code>成功。添加以下命令实测有效：（<a href="https://www.cnblogs.com/tocy/p/git-stash-reference.html">参考链接</a>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git stash<span class="comment"># 储存本地修改</span></span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><p>Done.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录博客网站的搭建过程。&lt;/p&gt;</summary>
    
    
    
    
    <category term="hexo github" scheme="http://shawshai.cn/tags/hexo-github/"/>
    
  </entry>
  
  <entry>
    <title>你好，世界！</title>
    <link href="http://shawshai.cn/2021/04/24/hello-world/"/>
    <id>http://shawshai.cn/2021/04/24/hello-world/</id>
    <published>2021-04-24T13:34:56.000Z</published>
    <updated>2021-04-26T15:03:16.931Z</updated>
    
    <content type="html"><![CDATA[<div align="center">欢迎来到少帥的博客~</div>]]></content>
    
    
      
      
    <summary type="html">&lt;div align=&quot;center&quot;&gt;欢迎来到少帥的博客~&lt;/div&gt;

</summary>
      
    
    
    
    
    <category term="hello" scheme="http://shawshai.cn/tags/hello/"/>
    
  </entry>
  
</feed>
